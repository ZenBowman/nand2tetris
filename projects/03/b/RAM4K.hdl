// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address[9..11], a=ls0, b=ls1, c=ls2, d=ls3, e=ls4, f=ls5,	g=ls6, h=ls7);

    And(a=load, b=ls0, out=load0);
    And(a=load, b=ls1, out=load1);
    And(a=load, b=ls2, out=load2);
    And(a=load, b=ls3, out=load3);
    And(a=load, b=ls4, out=load4);
    And(a=load, b=ls5, out=load5);
    And(a=load, b=ls6, out=load6);
    And(a=load, b=ls7, out=load7);

    RAM512(in=in, load=load0, address=address[0..8], out=rout0);
    RAM512(in=in, load=load1, address=address[0..8], out=rout1);
    RAM512(in=in, load=load2, address=address[0..8], out=rout2);
    RAM512(in=in, load=load3, address=address[0..8], out=rout3);
    RAM512(in=in, load=load4, address=address[0..8], out=rout4);
    RAM512(in=in, load=load5, address=address[0..8], out=rout5);
    RAM512(in=in, load=load6, address=address[0..8], out=rout6);
    RAM512(in=in, load=load7, address=address[0..8], out=rout7);

    Mux8Way16(a=rout0, b=rout1, c=rout2, d=rout3,
    		       e=rout4, f=rout5, g=rout6, h=rout7,
		       sel=address[9..11], out=out);

}